{
	"python" : [
		{
			"address" : "blog/python/1.html",
			"title" : "谈谈Queue同步队列的设计",
			"outlook" : "摘要：什么是同步队列？同步队列是一个队列的数据结构，多个生产者往队列插入数据，多个消费者从队列获取数据，多个线程间互不干扰，不会产生线程安全问题。在同步队列中我们关心的问题，队列中的同步机制，在多个生产者同时添加数据的时候如何处理，在多个消费者获取数据的时候如何处理，如何提供同步机制的效率，防止过多的阻塞，各种状态下的处理算法",
			"time" : "posted @ 2015-05-14 22:00"
		}
	],
	"java" : [
		{
			"address" : "blog/java/1.html",
			"title" : "谈Java集合大家族",
			"outlook" : "摘要：面给出一幅关系图，实线边框的是实现类，比如ArrayList，LinkedList，HashMap等，折线边框的是抽象类，比如AbstractCollection，AbstractList，AbstractMap等，而点线边框的是接口，比如Collection，Iterator，List等，读者们认真阅读一下，大致了解一下各类的关系，对整个来个大概的把握.在实际项目中，什么情况下选择什么List对我们的程序的质量有着明显改变，在讨论怎么选择之前，我想有必要了解一下各种List的特点及其内部实现结构，这往往能给我们更好的判断。",
			"time" : "posted @ 2015-05-15 14:12"
		}
	]
	"oracle" : [
		{
			"address" : "blog/oracle/1.html",
			"title" : "Count(*)和Count(列)谁快谁慢",
			"outlook" : "摘要：没错，第一行就是count(*)的执行时间，依次是count(第1列)到count(第25列)的执行时间，我们可以发现他们是依次递增的，虽然说不是线性递增的，但是是明显的向上增长的趋势。所以，我们可以得出：count(*)的速度是最快的，列的偏移量决定了性能，列越往后，开销越大。",
			"time" : "posted @ 2015-05-17 19:32"
		}
	]
}
